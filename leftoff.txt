Leftoff:
- create passenger getting in truck cab flow (UI as well as interact)
- continue on truck moving
	- stright, turn, reverse
	- Wheels spin depending on speed
	- wheels turn depending on turn value

BP_Object_Base
- isInteractObject
	- indicates whether we show UI when being looked at OR held
- lookingInteractTextMap <string, InteractAction>
	- list of actor names (i.e. BP_Wheel) that map to InteractAction ({ InteractText: string, InteractAction: Function?})
- holdingInteractTextMap
	- list of actor names (i.e. BP_Wheel) that map to InteractAction ({ InteractText: string, InteractAction: Function?})

player looks at object:
- is object has IsInteractObject == true, continue
- ObjectBase.GetInteractText(actorNameHolding ?? null)
	- function will take actor name, parse map, return text
	- ex: wheel weel takes bp_wheel and returns "Attach Wheel"

player not looking at object:
- player controller has map for "bp name -> object name"
- IsHoldingObject: show "drop " + mapped object name
- if not mapped, do nothing

player interacts with object (empty hand):
- each INSTANCE of interact object will inherit RunInteractAction(playerPawn)
- will be custom function that will do things like attach to player, etc

player interacts with object (holding object):
- each instance of interact object will inherit RunInteractActionOnItem(playerPawn, heldObjectActor)
- WILL ONLY perform action if held item is part of interact map
- will be custom functionality like "if incoming held object is bp_wheel, do this"



Wheels
	- ray trace to interact with wheel. Show HUD ui on hit
	- add pickup input actions
	- add socket for picked up item
	- add item to socket when picked up
	- and input to putting down (just releases from socket and falls)
	- add socket to truck for each wheel well
	- when interact hits this wheel well (collider) and is holding wheel, can press button to attach wheel to truck socket instead
	- Be able to "take off" wheel 
	- when wheel is on truck and looking at it, show percentage remaining of wheel power
	- test to make sure you can carry wheels in bed

Truck:
	- do all possession interact logic
		- add cameras for passengers too (up to 4 people total)
	- figure out spinning wheels when moving
		- fake it with code, or add sticky material? need to lock 2/3 axes
	- add driving inputs (forward, turn, stop, reverse)
	- add "get out" inputs
	- add physicshandlecomponent->lineardampening when attach wheel so it doesn't move so far (reset after half second). Might need c++ for this....

HUD
	- Add distance counter to game mode (one for all players)
	- set to distance from spawn
	- show in top corner
	- show "number of wheels used" 

Wheel wear and tear:
	- keep track of distance gone with wheel attached to truck
	- max it out at a certain number
	- Keep track of this number in GameMode (game instance?)
	- show this number in HUD

Game logic:
	- add a new wheel every other chunk
		- add bp to stream level that checks game mode chunk value, if even, spawn a wheel in random location
	- Maybe make more sporatic so players need to collect wheels in truck bed

Milestone 1 (game jam):
- Make endless road with PCG
	- turns
	- pull-off spots
	- wheels on side of road
- Add trees along road as well
- make basic pickup truck and wheels in blender
- create wheel system:
	- can pick up wheels
		- Butons: inspect (show status of wheels), drop, attach, throw
	- can attach wheels to truck
	- can detach wheels from truck
- Drive truck
	- possess truck
	- remove player model, no need to show it (first person view)
	- get out of truck
	- UI will show:
		- Gas
		- speed
		- status of each tire?
- Player hud:
	- distance from spawn (miles)

Milestone 2:
- add sleepiness meter
- Can pull out tent (basic lean-to), place on ground, interact to "sleep" (fade out, fade in)



35000.0

spline 2: (X=25000.000000,Y=0.000000,Z=0.000000)
spline 1: (X=51000.000000,Y=0.000000,Z=0.000000)